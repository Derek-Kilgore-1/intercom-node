{"version":3,"sources":["../../lib/contact.ts"],"names":[],"mappings":"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","file":"contact.js","sourcesContent":["import { Client } from '.';\nimport { GenericSearchFilters, Leaves, Paginated } from './common/common.types';\nimport { ListCompaniesResponse } from './company/company.types';\nimport { ContactObject, Role } from './contact/contact.types';\nimport { SegmentObject } from './segment/segment.types';\nimport { TagObject } from './tag/tag.types';\nimport { SubscriptionObject } from './subscription/subscription.types';\n\nexport default class Contact {\n  public readonly baseUrl = 'contacts';\n\n  constructor(private readonly client: Client) {\n    this.client = client;\n  }\n  createUser({externalId,\n    phone,\n    name,\n    avatar,\n    signedUpAt,\n    lastSeenAt,\n    ownerId,\n    isUnsubscribedFromEmails,\n    customAttributes}: CreateUserData) {\n    const requestData: CreateContactRequest = {\n      role: Role.USER,\n      external_id: externalId,\n      phone,\n      name,\n      avatar,\n      signed_up_at: signedUpAt,\n      last_seen_at: lastSeenAt,\n      owner_id: ownerId,\n      unsubscribed_from_emails: isUnsubscribedFromEmails,\n      custom_attributes: customAttributes,\n    }\n\n    return this.client.post<ContactObject>({url: `/${this.baseUrl}`, data: requestData});\n  }\n  createLead(data?: CreateLeadData) {\n    const requestData: CreateContactRequest = {\n      role: Role.LEAD,\n      phone: data?.phone,\n      name: data?.name,\n      avatar: data?.avatar,\n      signed_up_at: data?.signedUpAt,\n      last_seen_at: data?.lastSeenAt,\n      owner_id: data?.ownerId,\n      unsubscribed_from_emails: data?.isUnsubscribedFromMails,\n      custom_attributes: data?.customAttributes,\n    }\n    return this.client.post<ContactObject>({url: `/${this.baseUrl}`, data: requestData});\n  }\n  find({id}: RetrieveContactData) {\n    return this.client.get<ContactObject>({url: `/${this.baseUrl}/${id}`});\n  }\n  update({id,\n    role,\n    externalId,\n    phone,\n    name,\n    avatar,\n    signedUpAt,\n    lastSeenAt,\n    ownerId,\n    isUnsubscribedFromMails,\n    customAttributes}: UpdateContactData) {\n    const data: UpdateContactRequest = {\n      role,\n      external_id: externalId,\n      phone,\n      name,\n      avatar,\n      signed_up_at: signedUpAt,\n      last_seen_at: lastSeenAt,\n      owner_id: ownerId,\n      unsubscribed_from_emails: isUnsubscribedFromMails,\n      custom_attributes: customAttributes,\n    }\n\n    return this.client.put<ContactObject>({url: `/${this.baseUrl}/${id}`, data});\n  }\n  mergeLeadInUser({leadId, userId}: MergeLeadInUserContactData) {\n    const data: MergeLeadInUserContactRequest = {\n      from: leadId,\n      into: userId\n    }\n\n    return this.client.post<ContactObject>({url: `/${this.baseUrl}/merge`, data});\n  }\n  search({data}: SearchContactRequest){\n    return this.client.post<SearchContactResponse>({url: `/${this.baseUrl}/search`, data});\n  }\n  list({perPage, startingAfter}:ListAllContactsData) {\n    const queryData: ListAllContactsRequest = {\n      per_page: perPage,\n      starting_after: startingAfter\n    }\n    return this.client.get<ListContactsResponse>({url: `/${this.baseUrl}`, data: queryData});\n  }\n  delete({id}: DeleteContactData) {\n    return this.client.delete<DeleteContactResponse>({url: `/${this.baseUrl}/${id}`});\n  }\n  archive({id}: ArchiveContactData) {\n    return this.client.post<ArchiveContactResponse>({url: `/${this.baseUrl}/${id}/archive`});\n  }\n  unarchive({id}: UnarchiveContactData) {\n    return this.client.post<UnarchiveContactResponse>({url: `/${this.baseUrl}/${id}/unarchive`});\n  }\n  listAttachedCompanies({id, perPage, startingAfter}: ListAttachedCompaniesData) {\n  const queryData: ListAttachedCompaniesRequest = {\n    per_page: perPage,\n    starting_after: startingAfter\n  }\n    return this.client.get<ListCompaniesResponse>({url: `/${this.baseUrl}/${id}/companies`, data: queryData});\n  }\n  listAttachedTags({id}: RetrieveContactData) {\n    return this.client.get<ListAttachedTagsResponse>({url: `/${this.baseUrl}/${id}/tags`});\n  }\n  listAttachedSegments({id}: RetrieveContactData) {\n    return this.client.get<ListAttachedSegmentsResponse>({url: `/${this.baseUrl}/${id}/segments`});\n  }\n  listAttachedEmailSubscriptions({id}: RetrieveContactData) {\n    return this.client.get<ListAttachedEmailSubscriptionsResponse>({url: `/${this.baseUrl}/${id}/subscriptions`});\n  }\n}\n\ntype CreateContactRequest = Pick<ContactObject, 'role'> & Partial<Pick<ContactObject,  'external_id' | 'email' | 'phone' | 'name' | 'avatar' | 'signed_up_at' | 'last_seen_at' | 'owner_id' | 'unsubscribed_from_emails' | 'custom_attributes'>>;\n\ninterface CreateUserData {\n  externalId?: CreateContactRequest['external_id'],\n  phone?: CreateContactRequest['phone'],\n  name?: CreateContactRequest['name'],\n  avatar?: CreateContactRequest['avatar'],\n  signedUpAt?: CreateContactRequest['signed_up_at'],\n  lastSeenAt?: CreateContactRequest['last_seen_at'],\n  ownerId?: CreateContactRequest['owner_id'],\n  isUnsubscribedFromEmails?: CreateContactRequest['unsubscribed_from_emails'],\n  customAttributes?: CreateContactRequest['custom_attributes']\n}\n\ninterface CreateLeadData {\n  phone?: CreateContactRequest['phone'],\n  name?: CreateContactRequest['name'],\n  avatar?: CreateContactRequest['avatar'],\n  signedUpAt?: CreateContactRequest['signed_up_at'],\n  lastSeenAt?: CreateContactRequest['last_seen_at'],\n  ownerId?: CreateContactRequest['owner_id'],\n  isUnsubscribedFromMails?: CreateContactRequest['unsubscribed_from_emails'],\n  customAttributes?: CreateContactRequest['custom_attributes']\n}\n//\ninterface RetrieveContactData {\n  id: string,\n}\n//\ntype UpdateContactRequest = Partial<Pick<ContactObject, 'role' | 'external_id' | 'email' | 'phone' | 'name' | 'avatar' | 'signed_up_at' | 'last_seen_at' | 'owner_id' | 'unsubscribed_from_emails' | 'custom_attributes'>>;\n\ntype UpdateContactData = {\n  id: string,\n  role?: UpdateContactRequest['role'],\n  externalId?: UpdateContactRequest['external_id'],\n  phone?: UpdateContactRequest['phone'],\n  name?: UpdateContactRequest['name'],\n  avatar?: UpdateContactRequest['avatar'],\n  signedUpAt?: UpdateContactRequest['signed_up_at'],\n  lastSeenAt?: UpdateContactRequest['last_seen_at'],\n  ownerId?: UpdateContactRequest['owner_id'],\n  isUnsubscribedFromMails?: UpdateContactRequest['unsubscribed_from_emails'],\n  customAttributes?: UpdateContactRequest['custom_attributes']\n}\n//\ninterface DeleteContactData {\n  id: string\n}\n\ninterface DeleteContactResponse {\n  id: string,\n  object: ContactObject,\n  deleted: boolean,\n}\n//\ninterface ArchiveContactData {\n  id: string\n}\n\ninterface ArchiveContactResponse {\n  id: string,\n  object: ContactObject,\n  archived: boolean,\n}\n//\ntype UnarchiveContactData = ArchiveContactData;\n\ntype UnarchiveContactResponse = ArchiveContactResponse;\n//\ninterface MergeLeadInUserContactRequest {\n  from: string,\n  into: string\n}\n\ninterface MergeLeadInUserContactData {\n  leadId: string,\n  userId: string\n}\n//\nexport enum SearchContactOrderBy {\n  ASC = \"ascending\",\n  DESC = \"descending\"\n}\ninterface SearchContactPagination {\n  pagination: {\n    per_page: number,\n    starting_after?: string,\n  }\n}\n\ninterface SearchContactOrder {\n  sort: {\n    field: Leaves<ContactObject>,\n    order: SearchContactOrderBy,\n  }\n}\n\ninterface SearchContactRequest {\n  data: GenericSearchFilters<ContactObject> & Partial<SearchContactPagination> & Partial<SearchContactOrder>;\n}\n\ntype SearchContactResponse = Paginated<ContactObject>;\n//\ninterface ListAllContactsRequest {\n  per_page?: number,\n  starting_after?: string\n}\n\ninterface ListAllContactsData {\n  perPage?: number,\n  startingAfter?: string\n}\n\ntype ListContactsResponse = Paginated<ContactObject>;\n//\ntype ListAttachedTagsResponse = {\n  type: string,\n  tags: Array<TagObject>\n}\n//\ntype ListAttachedSegmentsResponse = {\n  type: string,\n  data: Array<SegmentObject>\n}\n//\ntype ListAttachedEmailSubscriptionsResponse = {\n  type: string,\n  data: Array<SubscriptionObject>\n}\n//\ntype ListAttachedCompaniesData = ListAllContactsData & {id: string};\ntype ListAttachedCompaniesRequest = ListAllContactsRequest;\n\n"]}