{"version":3,"sources":["../lib/client.ts"],"names":[],"mappings":"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","file":"client.js","sourcesContent":["import { deprecate } from 'util';\nimport User from './user';\nimport Event from './event';\nimport Company from './company';\nimport Contact from './contact';\nimport Visitor from './visitor';\nimport Counts from './counts';\nimport Admin from './admin';\nimport Tag from './tag';\nimport Segment from './segment';\nimport Message from './message';\nimport Conversation from './conversation';\nimport Note from './note';\nimport Customer from './customer';\n\nimport axios, { Axios, AxiosResponse } from 'axios';\nimport { BadResponseError } from './errors/badResponse.error';\n\ninterface IRequestOptions {\n  url: string;\n  data?: Record<string, unknown>\n}\n\nexport default class Client {\n  axiosInstance: Axios;\n  usernamePart?: string;\n  passwordPart?: string;\n  users: any;\n  events: any;\n  companies: any;\n  contacts: any;\n  leads: any;\n  visitors: any;\n  counts: any;\n  admins: any;\n  tags: any;\n  segments: any;\n  messages: any;\n  conversations: any;\n  notes: any;\n  customers: any;\n  requestOpts: { baseURL: string; };\n  usebaseURL: (baseURL: any) => this;\n\n  // TO-DO: Fix any\n  constructor(...args: any) {\n    // TO-DO: Refactor it!\n    if (args.length === 2) {\n      this.usernamePart = args[0];\n      this.passwordPart = args[1];\n    } else if (args.length === 1) {\n      if (args[0].token) {\n        this.usernamePart = args[0].token;\n        this.passwordPart = '';\n      } else {\n        this.usernamePart = args[0].appId;\n        this.passwordPart = args[0].appApiKey;\n      }\n    }\n    if (!this.usernamePart || this.passwordPart === undefined) {\n      throw new Error('Could not construct a client with those parameters');\n    }\n    this.users = new User(this);\n    this.events = new Event(this);\n    this.companies = new Company(this);\n    this.contacts = new Contact(this);\n    this.leads = new Contact(this);\n    this.visitors = new Visitor(this);\n    this.counts = new Counts(this);\n    this.admins = new Admin(this);\n    this.tags = new Tag(this);\n    this.segments = new Segment(this);\n    this.messages = new Message(this);\n    this.conversations = new Conversation(this);\n    this.notes = new Note(this);\n    this.customers = new Customer(this);\n    this.requestOpts = {\n      baseURL: 'https://api.intercom.io'\n    };\n\n    this.usebaseURL = deprecate(baseURL => this.useRequestOpts({ baseURL }), 'intercom-client - client.usebaseURL(url): Use client.useRequestOpts({ baseURL: url }) instead');\n\n    this.axiosInstance = this.initiateAxiosInstance();\n  }\n  initiateAxiosInstance(): Axios {\n    // TO-DO: Revise the params\n    const defaultHeaders = {\n      Accept: 'application/json',\n      'User-Agent': 'intercom-node-client/2.0.0'\n    };\n\n    const axiosInstance = axios.create({headers: defaultHeaders, auth: {username: this.usernamePart as string, password: this.passwordPart as string}, baseURL: this.requestOpts.baseURL});\n\n    return axiosInstance;\n  }\n  // TO-DO: Fix any\n  useRequestOpts(opts: any) {\n    this.requestOpts = Object.assign(this.requestOpts, opts);\n    this.axiosInstance.defaults = Object.assign(this.axiosInstance.defaults, this.requestOpts);\n    return this;\n  }\n\n  async ping(): Promise<AxiosResponse | void> {\n    try {\n      const response = await this.axiosInstance.get('/admins');\n      this.checkOnErrorInResponse(response);\n      return response;\n    }\n    catch(err) {\n      if (!err.response) {\n        throw err;\n      }\n      this.checkOnErrorInResponse(err.response)\n    }\n  }\n\n  async put({url, data}: IRequestOptions): Promise<AxiosResponse | void> {\n    try {\n      const response = await this.axiosInstance.put(url, data);\n      this.checkOnErrorInResponse(response);\n      return response;\n    }\n    catch(err) {\n      if (!err.response) {\n        throw err;\n      }\n      this.checkOnErrorInResponse(err.response)\n    }\n  }\n\n  async post({url, data}: IRequestOptions): Promise<AxiosResponse | void> {\n    try {\n      const response = await this.axiosInstance.post(url, data);\n      this.checkOnErrorInResponse(response);\n      return response;\n    }\n    catch(err) {\n      if (!err.response) {\n        throw err;\n      }\n      this.checkOnErrorInResponse(err.response)\n    }\n  }\n\n  async get({url, data}: IRequestOptions): Promise<AxiosResponse | void> {\n    try {\n      const response = await this.axiosInstance.get(url, {params: data});\n      this.checkOnErrorInResponse(response);\n      return response;\n    }\n    catch(err) {\n      if (!err.response) {\n        throw err;\n      }\n      this.checkOnErrorInResponse(err.response)\n    }\n  }\n\n  async nextPage(paginationObject: {next: string}): Promise<AxiosResponse | void> {\n    try {\n      const response = await this.axiosInstance.get(paginationObject.next, {baseURL: undefined});\n      this.checkOnErrorInResponse(response);\n      return response;\n    }\n    catch(err) {\n      if (!err.response) {\n        throw err;\n      }\n      this.checkOnErrorInResponse(err.response)\n    }\n  }\n\n  async delete({url, data}: IRequestOptions): Promise<AxiosResponse | void> {\n    try {\n      const response = await this.axiosInstance.delete(url, {params: data});\n      this.checkOnErrorInResponse(response);\n      return response;\n    }\n    catch(err) {\n      if (!err.response) {\n        throw err;\n      }\n      this.checkOnErrorInResponse(err.response)\n    }\n  }\n\n  private checkOnErrorInResponse ({data, headers, status}: AxiosResponse): void {\n    if (data.type !== 'error.list') {\n      return;\n    }\n\n    const message = Array.isArray(data.errors) && data.errors[0].message ? data.errors[0].message : null;\n    throw new BadResponseError(message || 'Response error', data, headers, status);\n  }\n}\n"]}