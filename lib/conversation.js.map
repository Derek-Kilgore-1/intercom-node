{"version":3,"sources":["../../lib/conversation.ts"],"names":[],"mappings":"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","file":"conversation.js","sourcesContent":["import { AxiosResponse } from 'axios';\nimport Client from './client'\nimport { Leaves, Paginated, StringifiedTimestamp } from './common/common.types';\nimport { ContactType, ConversationObject, ConversationObjectWithoutParts } from './conversation/conversation.types';\nimport { MessageObject } from './message/message.types';\n\nexport default class Conversation {\n  private conversationBaseUrl = 'conversations'\n\n  constructor(private readonly client: Client) {\n    this.client = client;\n  }\n  create({id, body}: CreateConversationData) {\n    const requestData: CreateConversationRequest = {\n      from: {\n        id,\n        type: 'user'\n      },\n      body\n    }\n    return this.client.post({url: `/${this.conversationBaseUrl}`, data: requestData}) as Promise<AxiosResponse<MessageObject, CreateConversationRequest>>;\n  }\n  find({id, inPlainText}: RetrieveConversationData) {\n    const data = inPlainText ? {\n      display_as: 'plaintext'\n    } : undefined;\n\n    return this.client.get({url: `/${this.conversationBaseUrl}/${id}`, data}) as Promise<AxiosResponse<ConversationObject, void>>;;\n  }\n  update({id, markRead, customAttributes}: UpdateConversationData) {\n    const data: UpdateConversationRequest = {\n      read: markRead,\n      custom_attributes: customAttributes,\n    }\n\n    return this.client.put({url: `/${this.conversationBaseUrl}/${id}`, data}) as Promise<AxiosResponse<ConversationObject, UpdateConversationRequest>>;\n  }\n  replyByIdAsUser({id, body, intercomUserId, userId, email, attachmentUrls}: ReplyByIdAsUserData) {\n    const data: ReplyToConversationAsUser = {\n      message_type: ReplyToConversationMessageType.COMMENT,\n      type: ReplyToConversationUserType.USER,\n      body,\n      intercom_user_id: intercomUserId,\n      user_id: userId,\n      email: email,\n      attachment_urls: attachmentUrls,\n    }\n    return this.client.post({url: `/${this.conversationBaseUrl}/${id}/reply`, data}) as Promise<AxiosResponse<ConversationObject, ReplyToConversationAsUser>>;\n  }\n  replyByIdAsAdmin({id, adminId, messageType, body, attachmentUrls}: ReplyByIdAsAdminData) {\n    const data: ReplyToConversationAsAdmin = {\n      admin_id: adminId,\n      message_type: messageType,\n      type: ReplyToConversationUserType.ADMIN,\n      body,\n      attachment_urls: attachmentUrls,\n    }\n    return this.client.post({url: `/${this.conversationBaseUrl}/${id}/reply`, data}) as Promise<AxiosResponse<ConversationObject, ReplyToConversationAsAdmin>>;\n  }\n  replyByLastAsUser({body, intercomUserId, userId, email, attachmentUrls}: ReplyByLastAsUserData) {\n    const data: ReplyToConversationAsUser = {\n      message_type: ReplyToConversationMessageType.COMMENT,\n      type: ReplyToConversationUserType.USER,\n      body,\n      intercom_user_id: intercomUserId,\n      user_id: userId,\n      email: email,\n      attachment_urls: attachmentUrls,\n    }\n    return this.client.post({url: `/${this.conversationBaseUrl}/last/reply`, data}) as Promise<AxiosResponse<ConversationObject, ReplyToConversationAsUser>>;\n  }\n  replyByLastAsAdmin({adminId, messageType, body, attachmentUrls}: ReplyByLastAsAdminData) {\n    const data: ReplyToConversationAsAdmin = {\n      admin_id: adminId,\n      message_type: messageType,\n      type: ReplyToConversationUserType.ADMIN,\n      body,\n      attachment_urls: attachmentUrls,\n    }\n    return this.client.post({url: `/${this.conversationBaseUrl}/last/reply`, data}) as Promise<AxiosResponse<ConversationObject, ReplyToConversationAsAdmin>>;\n  }\n  assign({id, type, adminId, assigneeId, body, withRunningAssignmentRules = false}: AssignConversationData) {\n    const url = `/${this.conversationBaseUrl}/${id}${withRunningAssignmentRules ? '/run_assignment_rules' : ''}`;\n    const data: AssignConversationRequest | undefined = withRunningAssignmentRules ? undefined : {\n      message_type: AssignToConversationMessageType.ASSIGNMENT,\n      type,\n      admin_id: adminId,\n      assignee_id: assigneeId,\n      body,\n    };\n\n    return this.client.post({url, data}) as Promise<AxiosResponse<ConversationObject, AssignConversationRequest>>;\n  }\n  snooze({id, adminId, snoozedUntil}: SnoozeConversationData) {\n    const data: SnoozeConversationRequest = {\n      message_type: SnoozeConversationMessageType.SNOOZED,\n      admin_id: adminId,\n      snoozed_until: snoozedUntil\n    };\n\n    return this.client.post({url: `/${this.conversationBaseUrl}/${id}/reply`, data}) as Promise<AxiosResponse<ConversationObject, SnoozeConversationRequest>>;\n  }\n  close({id, adminId, body}: CloseConversationData) {\n    const data: CloseConversationRequest = {\n      message_type: CloseConversationMessageType.CLOSED,\n      type: CloseConversationType.ADMIN,\n      admin_id: adminId,\n      body,\n    }\n\n    return this.client.post({url: `/${this.conversationBaseUrl}/${id}/parts`, data}) as Promise<AxiosResponse<ConversationObject, CloseConversationRequest>>\n  }\n  open({id, adminId}: OpenConversationData) {\n    const data: OpenConversationRequest = {\n      message_type: OpenConversationMessageType.OPEN,\n      admin_id: adminId,\n    }\n\n    return this.client.post({url: `/${this.conversationBaseUrl}/${id}/parts`, data}) as Promise<AxiosResponse<ConversationObject, OpenConversationRequest>>\n  }\n  attachContactAsAdmin({id, adminId, customer}: AttachContactToConversationAsAdminData) {\n    const data: AttachContactToConversationAdminRequest = {\n      admin_id: adminId,\n      customer: {\n        intercom_user_id: customer.intercomUserId,\n        user_id: customer.userId,\n        email: customer.email\n      }\n    }\n\n    return this.client.post({url: `/${this.conversationBaseUrl}/${id}/customers`, data}) as Promise<AxiosResponse<AttachContactToConversationResponse, AttachContactToConversationAdminRequest>>\n  }\n  attachContactAsContact({id, userId, intercomUserId, email, customer}: AttachContactToConversationAsContactData) {\n    const data: AttachContactToConversationContactRequest = {\n      intercom_user_id: intercomUserId,\n      user_id: userId,\n      email,\n      customer: {\n        intercom_user_id: customer.intercomUserId,\n        user_id: customer.userId,\n        email: customer.email,\n      }\n    }\n\n    return this.client.post({url: `/${this.conversationBaseUrl}/${id}/customers`, data}) as Promise<AxiosResponse<AttachContactToConversationResponse, AttachContactToConversationContactRequest>>\n  }\n  detachContactAsAdmin({conversationId, contactId, adminId}: DetachContactFromConversationData) {\n    const data: DetachContactFromConversationRequest = {\n      admin_id: adminId,\n    }\n\n    return this.client.delete({url: `/${this.conversationBaseUrl}/${conversationId}/customers/${contactId}`, data}) as Promise<AxiosResponse<ConversationObject, DetachContactFromConversationRequest>>\n  }\n  search({data}: SearchConversationRequest){\n    return this.client.post({url: `/${this.conversationBaseUrl}/search`, data}) as Promise<AxiosResponse<SearchConversationResponse, SearchConversationRequest['data']>>\n  }\n  list({query}: ListConversationRequest) {\n    return this.client.get({url: `/${this.conversationBaseUrl}`, data: query}) as Promise<AxiosResponse<ListConversationResponse, void>>;\n  }\n  redactConversationPart({conversationId, conversationPartId, sourceId, type}: RedactConversationPartData) {\n    const data: RedactConversationPartRequest = {\n      conversation_id: conversationId,\n      conversation_part_id: conversationPartId,\n      source_id: sourceId,\n      type\n    };\n\n    return this.client.post({url: `/${this.conversationBaseUrl}/redact`, data}) as Promise<AxiosResponse<Conversation, RedactConversationPartRequest>>;\n  }\n}\n\ninterface CreateConversationRequest {\n  from: {\n    type: 'user' | string,\n    id: string,\n  },\n  body: string\n}\n\ninterface CreateConversationData {\n  id: string,\n  body: string\n}\n//\ninterface RetrieveConversationData {\n  id: string,\n  inPlainText?: boolean;\n}\n//\ninterface UpdateConversationRequest {\n  custom_attributes: object,\n  read?: boolean\n}\ninterface UpdateConversationData {\n  id: string,\n  markRead?: boolean,\n  customAttributes: object,\n}\n//\nexport enum ReplyToConversationMessageType {\n  COMMENT = 'comment',\n  NOTE = 'note'\n}\nexport enum ReplyToConversationUserType {\n  ADMIN = 'admin',\n  USER = 'user'\n}\n\ninterface ReplyToConversationAsUser {\n  message_type: ReplyToConversationMessageType,\n  type: ReplyToConversationUserType,\n  body: string,\n  // refactor to CustomerObject\n  intercom_user_id?: string,\n  user_id?: string,\n  email?: string,\n  attachment_urls?: Array<string>,\n}\n\ninterface ReplyToConversationAsAdmin {\n  admin_id: string,\n  message_type: ReplyToConversationMessageType,\n  type: ReplyToConversationUserType,\n  body: string,\n  attachment_urls?: Array<string>,\n}\n\ninterface ReplyByIdAsUserData {\n  id: string,\n  body: string,\n  intercomUserId?: string,\n  userId?: string,\n  email?: string,\n  attachmentUrls?: Array<string>,\n};\n\ninterface ReplyByIdAsAdminData {\n  id: string;\n  adminId: string;\n  messageType: ReplyToConversationMessageType,\n  body: string,\n  attachmentUrls?: Array<string>,\n};\n\ntype ReplyByLastAsUserData = Omit<ReplyByIdAsUserData, 'id'>;\n\ntype ReplyByLastAsAdminData = Omit<ReplyByIdAsAdminData, 'id'>;\n//\nexport enum AssignToConversationMessageType {\n  ASSIGNMENT = 'assignment'\n}\nexport enum AssignToConversationUserType {\n  ADMIN = 'admin',\n  TEAM = 'team'\n}\n\ninterface AssignConversationRequest {\n  message_type: AssignToConversationMessageType,\n  type?: AssignToConversationUserType,\n  admin_id?: string,\n  assignee_id?: string | 0,\n  body?: string,\n}\n\ninterface AssignConversationData {\n  id: string,\n  type?: AssignToConversationUserType,\n  adminId?: string,\n  assigneeId?: string | 0,\n  body?: string,\n  withRunningAssignmentRules?: boolean\n}\n//\nexport enum SnoozeConversationMessageType {\n  SNOOZED = 'snoozed'\n}\n\ninterface SnoozeConversationRequest {\n  message_type: SnoozeConversationMessageType,\n  admin_id: string,\n  snoozed_until: StringifiedTimestamp\n}\n\ninterface SnoozeConversationData {\n  id: string,\n  adminId: string,\n  snoozedUntil: StringifiedTimestamp\n}\n//\nexport enum CloseConversationMessageType {\n  CLOSED = 'closed'\n}\nexport enum CloseConversationType {\n  ADMIN = 'admin'\n}\n\ninterface CloseConversationRequest {\n  message_type: CloseConversationMessageType,\n  type: CloseConversationType,\n  admin_id: string,\n  body?: string\n}\n\ninterface CloseConversationData {\n  id: string,\n  adminId: string,\n  body?: string\n}\n//\nexport enum OpenConversationMessageType {\n  OPEN = 'open'\n}\n\ninterface OpenConversationRequest {\n  message_type: OpenConversationMessageType,\n  admin_id: string,\n}\n\ninterface OpenConversationData {\n  id: string,\n  adminId: string,\n}\n//\ninterface CustomerObject {\n  intercom_user_id?: string;\n  user_id?: string;\n  email?: string;\n}\n\ninterface NormalizedCustomerObject {\n  intercomUserId?: string\n  userId?: string\n  email?: string\n}\n\ninterface AttachContactToConversationAdminRequest {\n  admin_id: string\n  customer: CustomerObject\n}\n\ninterface AttachContactToConversationContactRequest extends CustomerObject {\n  customer: CustomerObject;\n}\n\ninterface AttachContactToConversationAsAdminData {\n  id: string,\n  adminId: string,\n  customer: NormalizedCustomerObject\n}\n\ninterface AttachContactToConversationAsContactData extends NormalizedCustomerObject {\n  id: string,\n  customer: NormalizedCustomerObject\n}\n\ninterface AttachContactToConversationResponse {\n  customers: Array<{id: string, type: ContactType}>\n}\n//\ninterface DetachContactFromConversationRequest {\n  admin_id: string\n}\n\ninterface DetachContactFromConversationData {\n  conversationId: string,\n  contactId: string,\n  adminId: string\n}\n//\nexport enum Operators {\n  AND = \"AND\",\n  OR = \"OR\",\n  EQUALS = \"=\",\n  NOT_EQUALS = \"!=\",\n  IN = \"IN\",\n  NIN = \"NIN\",\n  GREATER_THAN = \">\",\n  LESS_THAN = \"<\",\n  CONTAINS = \"~\",\n  NOT_CONTAINS = \"!~\",\n  STARTS_WITH = \"^\",\n  ENDS_WITH = \"$\",\n}\n\ninterface FlatQuery {\n  field: Leaves<ConversationObject>,\n  operator: Operators,\n  value: string | number;\n}\n\ninterface NestedQueries {\n  operator: Operators,\n  value: Array<FlatQuery | NestedQueries> | string | number,\n}\n\ninterface SearchFilters {\n  query: FlatQuery | NestedQueries\n}\ninterface SearchConversationRequest {\n  data: SearchFilters\n}\n\ninterface SearchConversationResponse extends ConversationObject {\n  total_count: number\n}\n//\nexport enum Order {\n  DESC = 'desc',\n  ASC = 'asc',\n}\n\nexport enum SortBy {\n  CreatedAt = 'created_at',\n  UpdatedAt = 'updated_at',\n  WaitingSince = 'waiting_since'\n}\n\ninterface ListConversationRequest {\n  query: {\n    order: Order,\n    sort: SortBy\n  },\n}\n\ntype ListConversationResponse = Paginated<ConversationObjectWithoutParts>\n//\nexport enum RedactConversationPartType {\n  CONVERSATION_PART = 'conversation_part',\n  SOURCE = 'source'\n}\n\ninterface RedactConversationPartRequest {\n  type: RedactConversationPartType,\n  conversation_id: string,\n  conversation_part_id?: string,\n  source_id?: string,\n}\n\ninterface RedactConversationPartData {\n  type: RedactConversationPartType,\n  conversationId: string,\n  conversationPartId?: string,\n  sourceId?: string,\n}\n"]}